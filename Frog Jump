import java.util.*;
public class FrogJump 
{
	public static boolean canCross(int[] stones) 
	{
		int n = stones.length;
		HashMap<Integer,HashSet<Integer>> map = new HashMap<Integer,HashSet<Integer>>();
		for(int i=0;i<n;i++)
		{
			map.put(stones[i],new HashSet<Integer>());
		}
		
		map.get(stones[0]).add(0);
		
		for(int i=0;i<n;i++)
		{
			int stone = stones[i];
			
			HashSet<Integer> set = map.get(stone);
			
			for(int val:set)
			{
				if(map.containsKey(stone+val-1))
				{
					if(val-1>0)
						map.get(stone+val-1).add(val-1);
				}
				if(map.containsKey(stone+val+1))
				{
					if(val+1>0)
						map.get(stone+val+1).add(val+1);
				}
				if(map.containsKey(stone+val))
				{
					if(val>0)
						map.get(stone+val).add(val);
				}
			}
		}
		if(map.get(stones[n-1]).size()>0)
			return true;
		return false;
	}
	public static void main(String[] args) 
	{
		int stones[] = {0,1,2,3,4,8,9,11};
		System.out.println(canCross(stones));
	}
}
