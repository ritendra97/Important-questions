import java.util.*;
public class BinarySearch 
{
	public static int getMedianUtil(int arr1[],int arr2[],int begain ,int end)
	{
		while(begain<=end)
		{
			int i1 = (begain+end)/2;
			int i2 = (arr1.length+arr2.length+1)/2-i1;
			
			int max1 = (i1==arr1.length-1)?Integer.MAX_VALUE:arr1[i1-1];
			int min1 = (i1==0)?Integer.MIN_VALUE:arr1[i1];
			
			int max2 = (i2==arr2.length-1)?Integer.MAX_VALUE:arr2[i2-1];
			int min2 = (i1==0)?Integer.MIN_VALUE:arr2[i2];
			
			if((max1<=min2) && (max2<=min1))
			{
				if((arr1.length+arr2.length)%2==0)
				{
					return (Math.max(max1, max2)+Math.min(min1, min2))/2;
				}
				else
				{
					return Math.max(max1, max2);
				}
			}
			
			if(max1>min2)
				end = i1-1;
			else
				begain = i1+1;
		}
		return -1;
	}
	public static int getMedian(int arr1[],int arr2[])
	{
		int n =0;
		if(arr1.length<arr2.length)
			 n = arr1.length;
		else if(arr2.length<arr1.length)
			 n = arr2.length;
		else 
			n=arr1.length;
		return  getMedianUtil(arr1,arr2,0,n-1);
	}
	public static void main(String[] args) 
	{
		int ar1[] = { 900 };
	    int ar2[] = { 5, 8, 10, 20 };
    
        System.out.println("Median is " +getMedian(ar1, ar2));
	}
}
